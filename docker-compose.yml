version: '3.8'

services:
  # Backend service
  backend:
    build: ./backend
    container_name: expertdb-backend
    ports:
      - "8080:8080"
    volumes:
      - expertdb-data:/app/data
    environment:
      - PORT=8080
      - DB_PATH=/app/data/expertdb.sqlite
      - UPLOAD_PATH=/app/data/documents
      - CORS_ALLOWED_ORIGINS=http://localhost:3000
      - AI_SERVICE_URL=none
    restart: unless-stopped
    networks:
      - expertdb-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Frontend service
  frontend:
    build: ./frontend
    container_name: expertdb-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NODE_ENV=development
    networks:
      - expertdb-network
    depends_on:
      - backend

# AI service commented out for initial testing
#  ai:
#    build: 
#      context: ./backend
#      dockerfile: ./ai-placeholder/Dockerfile
#    container_name: expertdb-ai
#    ports:
#      - "9000:9000"
#    volumes:
#      - expertdb-data:/app/data
#    environment:
#      - PORT=9000
#      - MODEL_PATH=/app/models
#      - DATA_PATH=/app/data
#    networks:
#      - expertdb-network

volumes:
  expertdb-data:
    driver: local

networks:
  expertdb-network:
    driver: bridge
