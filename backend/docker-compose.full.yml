version: '3.8'

services:
  # Backend service
  expertdb-backend:
    build: .
    container_name: expertdb-backend
    ports:
      - "8080:8080"
    volumes:
      - expertdb-data:/app/data
    environment:
      - PORT=8080
      - DB_PATH=/app/data/expertdb.sqlite
      - UPLOAD_PATH=/app/data/documents
      - CORS_ALLOWED_ORIGINS=http://localhost:3000
      - AI_SERVICE_URL=http://expertdb-ai:9000
    restart: unless-stopped
    networks:
      - expertdb-network
    depends_on:
      - expertdb-ai

  # Frontend service (placeholder)
  expertdb-frontend:
    # In a real setup, you would build your frontend or use a prebuilt image
    image: nginx:alpine
    container_name: expertdb-frontend
    ports:
      - "3000:80"
    volumes:
      # This will be replaced with your actual frontend build
      - ./frontend-placeholder/:/usr/share/nginx/html/
    environment:
      - API_URL=http://localhost:8080
    networks:
      - expertdb-network
    depends_on:
      - expertdb-backend

  # AI service (placeholder)
  expertdb-ai:
    # In a real setup, this would be your specialized AI service
    image: python:3.9-slim
    container_name: expertdb-ai
    ports:
      - "9000:9000"
    volumes:
      - expertdb-data:/app/data
      - ./ai-placeholder/:/app/
    command: >
      bash -c "pip install --upgrade pip && 
               pip install flask &&
               python /app/placeholder_server.py"
    environment:
      - PORT=9000
      - MODEL_PATH=/app/models
      - DATA_PATH=/app/data
    networks:
      - expertdb-network

volumes:
  expertdb-data:
    driver: local

networks:
  expertdb-network:
    driver: bridge